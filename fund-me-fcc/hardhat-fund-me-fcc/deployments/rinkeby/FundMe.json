{
  "address": "0xB8130060e9dCA14921D56E242969d4B84747b304",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ethAmount",
          "type": "uint256"
        }
      ],
      "name": "getConversionRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumUsd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "widthdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x702205ddcc6ceb63d5f82410161f33d50593d13c25857b60319866830958b209",
  "receipt": {
    "to": null,
    "from": "0x11F19ff3f7Aa2417B4d1554Bc3D397C0d3Ae4e07",
    "contractAddress": "0xB8130060e9dCA14921D56E242969d4B84747b304",
    "transactionIndex": 42,
    "gasUsed": "994025",
    "logsBloom": "0x
    "blockHash": "0xcdd6c91f0c8f84976e3cf5af2732687349273943c1d658b4455e465b09e298fd",
    "transactionHash": "0x702205ddcc6ceb63d5f82410161f33d50593d13c25857b60319866830958b209",
    "logs": [],
    "blockNumber": 10815149,
    "cumulativeGasUsed": "7108007",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
  ],
  "numDeployments": 1,
  "solcInputHash": "41840676b7c8cceb4d47b93b8e6737d7",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"}],\"name\":\"getConversionRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"widthdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// Get funds from users\\n// Withdraw funds\\n// Set a minimum funding value in USD\\n\\n// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\n// import \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner(); // solidity ^0.8.7\\n\\ncontract FundMe {\\n  using PriceConverter for uint256;\\n  // uint256 public number;\\n\\n  uint256 public constant minimumUsd = 50 * 1e18;\\n\\n  address[] public funders;\\n  mapping(address => uint256) public addressToAmountFunded;\\n\\n  address public immutable i_owner;\\n\\n  AggregatorV3Interface public priceFeed;\\n\\n  constructor(address priceFeedAddress) {\\n    i_owner = msg.sender;\\n    priceFeed = AggregatorV3Interface(priceFeedAddress);\\n  }\\n\\n  // test:\\n  // (minimumUsd)\\n  // get eth price from data.chain.link (ethprice)\\n  // minimumUsd / ethprice = (value in eth)\\n  // go to eth-converter.com to convert eth to wei then input to value field then press \\\"fund\\\"\\n  function fund() public payable {\\n    // want to be able to set a minimu fund amount in USD\\n    // 1. How do we send ETH to this contract?\\n    // number = 5;\\n    require(\\n      msg.value.getConversionRate(priceFeed) >= minimumUsd,\\n      \\\"Didn't send enough\\\"\\n    ); //1e18wei = 1eth\\n    // require(getConversionRate(msg.value) >= minimumUsd, \\\"Didn't send enough\\\"); //1e18wei = 1eth\\n    // a ton of computation here\\n    funders.push(msg.sender);\\n    addressToAmountFunded[msg.sender] = msg.value;\\n\\n    // what is reverting?\\n    // undo any action before, and send remaining gas back\\n  }\\n\\n  function getPrice() public view returns (uint256) {\\n    // // ABI\\n    // // Address: 0x8A753747A1Fa494EC906cE90E9f37563A8AF630e (find on docs.chain.link)\\n    // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n    //   0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\n    // );\\n    (, int256 price, , , ) = priceFeed.latestRoundData();\\n    // ETH in terms of USD\\n    // 3000_0000000\\n    return uint256(price * 1e10); // 1**10 = 10000000000\\n  }\\n\\n  function getVersion() public view returns (uint256) {\\n    // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n    //   0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\n    // );\\n    return priceFeed.version();\\n  }\\n\\n  function getConversionRate(uint256 ethAmount) public view returns (uint256) {\\n    uint256 ethPrice = getPrice();\\n    uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // Always multiple before you divide\\n    return ethAmountInUsd;\\n\\n    // ex:\\n    // ethPrice = 3000_000000000000000000 = ETH / USD price\\n    // ethAmount = 1_000000000000000000\\n    // ethAmountInUsd = 2999.9999999999999999999999\\n  }\\n\\n  function widthdraw() public onlyOwner {\\n    // require(msg.sender == owner, \\\"Sender is not owner!\\\");\\n    // for loop\\n    // [1, 2, 3, 4]\\n    // for (/* string index, ending index, step amount*/)\\n    for (uint256 funderIndex = 0; funderIndex < funders.length; funderIndex++) {\\n      address funder = funders[funderIndex];\\n      addressToAmountFunded[funder] = 0;\\n    }\\n    // reset the array\\n    funders = new address[](0);\\n    // actually widthdraw the\\n\\n    // // https://solidity-by-example.org/sending-ether/\\n    // // transfer\\n    // // msg.sender = address\\n    // // payable(msg.sender) = payable address\\n    // payable(msg.sender).transfer(address(this).balance);\\n\\n    // // send\\n    // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n    // require(sendSuccess, \\\"Send failed\\\");\\n\\n    // call - most recommended way to send token\\n    // *For the most part*\\n    // It can be case-by-case\\n    // (bool callSuccess, bytes memory dataReturned) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n    (bool callSuccess, ) = payable(msg.sender).call{\\n      value: address(this).balance\\n    }(\\\"\\\");\\n    require(callSuccess, \\\"Call failed\\\");\\n  }\\n\\n  modifier onlyOwner() {\\n    // require(msg.sender == i_owner, \\\"Sender is not owner!\\\");\\n    if (msg.sender != i_owner) {\\n      revert NotOwner();\\n    }\\n    _;\\n  }\\n\\n  // What happens if someone sends this contract ETH without calling the fund function?\\n  receive() external payable {\\n    fund();\\n  }\\n\\n  fallback() external payable {\\n    fund();\\n  }\\n}\\n\\n// 1. Enums\\n// 2. Events\\n// 3. Try / Catch\\n// 4. Function Selectors\\n// 5. abi.encode / decode\\n// 6. Hashing\\n// 7. Yul / Assumbly\\n\",\"keccak256\":\"0x53a233ca251dad10c2891dff7e5d9c8cea5d779dd41efa03209e1ceeb9a73a61\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n  function getPrice(AggregatorV3Interface priceFeed)\\n    internal\\n    view\\n    returns (uint256)\\n  {\\n    // // ABI\\n    // // Address: 0x8A753747A1Fa494EC906cE90E9f37563A8AF630e (find on docs.chain.link)\\n    // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n    //   0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\n    // );\\n    (, int256 price, , , ) = priceFeed.latestRoundData();\\n    // ETH in terms of USD\\n    // 3000_0000000\\n    return uint256(price * 1e10); // 1**10 = 10000000000\\n  }\\n\\n  function getVersion(AggregatorV3Interface priceFeed)\\n    internal\\n    view\\n    returns (uint256)\\n  {\\n    // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n    //   0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\n    // );\\n    return priceFeed.version();\\n  }\\n\\n  function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\n    internal\\n    view\\n    returns (uint256)\\n  {\\n    uint256 ethPrice = getPrice(priceFeed);\\n    uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // Always multiple before you divide\\n    return ethAmountInUsd;\\n\\n    // ex:\\n    // ethPrice = 3000_000000000000000000 = ETH / USD price\\n    // ethAmount = 1_000000000000000000\\n    // ethAmountInUsd = 2999.9999999999999999999999\\n  }\\n}\\n\",\"keccak256\":\"0xb3909d0c17cf5a2ee749fbdd9b7a9e8cca3fa873c9a6320d8e5233ee46f7bd7e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100955760003560e01c8063741bef1a11610059578063741bef1a1461019557806398d5fdca146101c0578063b60d4288146101eb578063dba6335f146101f5578063dc0d3dff14610220576100a4565b8063098de820146100ae5780630d8e6e2c146100d95780633e47d6f31461010457806352b50a2a146101415780636e5b6b2814610158576100a4565b366100a4576100a261025d565b005b6100ac61025d565b005b3480156100ba57600080fd5b506100c3610386565b6040516100d091906109b1565b60405180910390f35b3480156100e557600080fd5b506100ee610393565b6040516100fb91906109b1565b60405180910390f35b34801561011057600080fd5b5061012b60048036038101906101269190610a2f565b61043a565b60405161013891906109b1565b60405180910390f35b34801561014d57600080fd5b50610156610452565b005b34801561016457600080fd5b5061017f600480360381019061017a9190610a88565b610692565b60405161018c91906109b1565b60405180910390f35b3480156101a157600080fd5b506101aa6106cc565b6040516101b79190610b14565b60405180910390f35b3480156101cc57600080fd5b506101d56106f2565b6040516101e291906109b1565b60405180910390f35b6101f361025d565b005b34801561020157600080fd5b5061020a6107b2565b6040516102179190610b3e565b60405180910390f35b34801561022c57600080fd5b5061024760048036038101906102429190610a88565b6107d6565b6040516102549190610b3e565b60405180910390f35b6802b5e3af16b188000061029c600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461081590919063ffffffff16565b10156102dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d490610bb6565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6802b5e3af16b188000081565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b1580156103fd57600080fd5b505afa158015610411573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104359190610beb565b905090565b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104d7576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156105825760008082815481106104fc576104fb610c18565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061057a90610c76565b9150506104da565b50600067ffffffffffffffff81111561059e5761059d610cbf565b5b6040519080825280602002602001820160405280156105cc5781602001602082028036833780820191505090505b50600090805190602001906105e29291906108f1565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161060990610d1f565b60006040518083038185875af1925050503d8060008114610646576040519150601f19603f3d011682016040523d82523d6000602084013e61064b565b606091505b505090508061068f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068690610d80565b60405180910390fd5b50565b60008061069d6106f2565b90506000670de0b6b3a764000084836106b69190610da0565b6106c09190610e29565b90508092505050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561075d57600080fd5b505afa158015610771573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107959190610ed2565b5050509150506402540be400816107ac9190610f4d565b91505090565b7f000000000000000000000000000000000000000000000000000000000000000081565b600081815481106107e657600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061082183610851565b90506000670de0b6b3a7640000858361083a9190610da0565b6108449190610e29565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561089a57600080fd5b505afa1580156108ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d29190610ed2565b5050509150506402540be400816108e99190610f4d565b915050919050565b82805482825590600052602060002090810192821561096a579160200282015b828111156109695782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610911565b5b509050610977919061097b565b5090565b5b8082111561099457600081600090555060010161097c565b5090565b6000819050919050565b6109ab81610998565b82525050565b60006020820190506109c660008301846109a2565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109fc826109d1565b9050919050565b610a0c816109f1565b8114610a1757600080fd5b50565b600081359050610a2981610a03565b92915050565b600060208284031215610a4557610a446109cc565b5b6000610a5384828501610a1a565b91505092915050565b610a6581610998565b8114610a7057600080fd5b50565b600081359050610a8281610a5c565b92915050565b600060208284031215610a9e57610a9d6109cc565b5b6000610aac84828501610a73565b91505092915050565b6000819050919050565b6000610ada610ad5610ad0846109d1565b610ab5565b6109d1565b9050919050565b6000610aec82610abf565b9050919050565b6000610afe82610ae1565b9050919050565b610b0e81610af3565b82525050565b6000602082019050610b296000830184610b05565b92915050565b610b38816109f1565b82525050565b6000602082019050610b536000830184610b2f565b92915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b6000610ba0601283610b59565b9150610bab82610b6a565b602082019050919050565b60006020820190508181036000830152610bcf81610b93565b9050919050565b600081519050610be581610a5c565b92915050565b600060208284031215610c0157610c006109cc565b5b6000610c0f84828501610bd6565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c8182610998565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610cb457610cb3610c47565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d09600083610cee565b9150610d1482610cf9565b600082019050919050565b6000610d2a82610cfc565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d6a600b83610b59565b9150610d7582610d34565b602082019050919050565b60006020820190508181036000830152610d9981610d5d565b9050919050565b6000610dab82610998565b9150610db683610998565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610def57610dee610c47565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e3482610998565b9150610e3f83610998565b925082610e4f57610e4e610dfa565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e7981610e5a565b8114610e8457600080fd5b50565b600081519050610e9681610e70565b92915050565b6000819050919050565b610eaf81610e9c565b8114610eba57600080fd5b50565b600081519050610ecc81610ea6565b92915050565b600080600080600060a08688031215610eee57610eed6109cc565b5b6000610efc88828901610e87565b9550506020610f0d88828901610ebd565b9450506040610f1e88828901610bd6565b9350506060610f2f88828901610bd6565b9250506080610f4088828901610e87565b9150509295509295909350565b6000610f5882610e9c565b9150610f6383610e9c565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610fa257610fa1610c47565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610fdf57610fde610c47565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561101c5761101b610c47565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561105957611058610c47565b5b82820290509291505056fea264697066735822122097365407ebdcff9873813b10eab0f4c8c5ac736be71946788b831f95974a20f064736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 70,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}